program: train_lstm.py
method: bayes
name: multi_task_multi_class_tuning
entity: multi_task_price_prediction

metric:
  name: val_loss
  goal: minimize
parameters:
  
  log_price: 
    distribution: constant
    value: True

  n_classes: 
    distribution: constant
    value: 3
  
  currency_list:
    distribution: constant
    value: ['BTC', 'ETH', 'LTC'] 

  dataset_percentages: 
    distribution: constant
    value: [0.96, 0.02, 0.02]

  data_frequency: 
    distribution: constant
    value: "1d"

  pred_frequency: 
    distribution: constant
    value: "D"

  window_size: 
    distribution: categorical
    values:
    - 50
    - 75
    - 100
    - 150
  
  indicators:
    distribution: categorical
    values:
      - False
      - True
  imfs:
    distribution: categorical
    values:
      - False
      - True
  ohlv:
    distribution: categorical
    values:
      - False
      - True

  ma_period:
    distribution: categorical
    values:
    - 7
    - 10

  neutral_quantile:
    distribution: categorical
    values:
    - 0.1
    - 0.33
    - 0.25

  batch_size:
    distribution: categorical
    values: 
    - 16
    - 32
    - 64
    - 128
    - 256

  bidirectional:
    distribution: categorical
    values:
      - False
      - True
  
  remove_trend:
    distribution: categorical
    values:
      - False
      - True
  
  lstm_hidden_size:
    distribution: categorical
    values: 
    - 32
    - 64
    - 128
    - 256
  
  n_lstm_layers:
    distribution: categorical
    values:
      - 1
      - 3
      - 5

  calculate_loss_weights:
    distribution: categorical
    values:
      - False
      - True

  last_layer_fsz:
    distribution: categorical
    values: 
    - 32
    - 64
    - 128
    - 256
  
  dropout_after_each_lstm_layer: 
    distribution: uniform
    min: 0
    max: 0.6
  
  dropout_before_output_layer: 
    distribution: uniform
    min: 0
    max: 0.6

  warmup_epoch:
    distribution: int_uniform
    min: 1
    max: 40

  learning_rate:
    distribution: uniform
    min: 1e-5
    max: 1e-1
   
  weight_decay:
    distribution: uniform
    min: 0
    max: 2e-1